openapi: 3.0.0
info:
  title: Fudo API
  description: API for product management with authentication
  version: 1.0.0
servers:
  - url: /
    description: Default server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
    AuthRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          description: User's username
        password:
          type: string
          description: User's password
          format: password
    AuthResponse:
      type: object
      properties:
        token:
          type: string
          description: Authentication token for subsequent requests
    Product:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the product
        name:
          type: string
          description: Name of the product
        price:
          type: number
          format: float
          description: Price of the product
        description:
          type: string
          description: Description of the product
        created_by:
          type: string
          description: Username of the user who created the product
        created_at:
          type: string
          format: date-time
          description: Timestamp when the product was created
    ProductCreateRequest:
      type: object
      required:
        - name
        - price
      properties:
        name:
          type: string
          description: Name of the product
        price:
          type: number
          format: float
          description: Price of the product
        description:
          type: string
          description: Description of the product
    ProductCreateResponse:
      type: object
      properties:
        status:
          type: string
          description: Status of the product creation request
        message:
          type: string
          description: Message about the product creation process
        job_id:
          type: string
          format: uuid
          description: Identifier for the background job
    ProductsListResponse:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: "#/components/schemas/Product"
paths:
  /auth:
    post:
      summary: Authenticate user
      description: Authenticates a user and returns a token
      operationId: authenticate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthRequest"
      responses:
        "200":
          description: Authentication successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "400":
          description: Invalid request format
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /products:
    post:
      summary: Create a new product
      description: Creates a new product asynchronously
      operationId: createProduct
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductCreateRequest"
      responses:
        "202":
          description: Product creation accepted and processing
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductCreateResponse"
        "400":
          description: Invalid request format
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      summary: List all products
      description: Returns a list of all products
      operationId: listProducts
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of products
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductsListResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
